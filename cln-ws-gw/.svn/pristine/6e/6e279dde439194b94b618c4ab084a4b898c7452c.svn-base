package com.cln.dubbo.client;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;

import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Component;

import com.alibaba.fastjson.JSONObject;
import com.cln.bean.common.CardCloudResult;
import com.cln.dubbo.base.service.IAreaService;
import com.cln.dubbo.bus.service.IGpsUploadService;

@Component
public class ConsumerClient implements Runnable
{

	ClassPathXmlApplicationContext context = ServiceBeanUtils.getContext();
	
	/*
	 * @see java.lang.Runnable#run()
	 */
	public void run()
	{
		//ProcessService demoService = StaticUtils.getService();
	
		// invocation
		Long startTime = null;
		
		JSONObject param = new JSONObject();
		param.put("areaId", "110101");
		param.put("streetId", "11010102");
		
		IAreaService areaService = ServiceBeanUtils.getIAreaService();
		CardCloudResult cardCloudResult = areaService.selectAllSchoolByStreet(param);
		System.out.println("&&&&&&&&&&&&&&响应值="+cardCloudResult);
		
	}
		

	public static void main(String[] args)
	{
//		new Thread(new ConsumerClient()).start();
		InputStreamReader isr = null;
		BufferedReader br = null;
		FileInputStream fis = null;
		
		IGpsUploadService gpsUploadService = ServiceBeanUtils.getIGpsUploadService();
		JSONObject map = new JSONObject();
		map.put("merCode", "009191");
		map.put("terminalNo","10000337");
		map.put("flag", 2);
		
		try {
			String path = "F:\\gpsdata\\108A_鲁K91219_612.txt";
//			String path = "F:\\gpsdata\\108A_鲁K91290_613.txt";
//			String path = "F:\\gpsdata\\108A_鲁K91219_2018.6.15.txt";
			fis = new FileInputStream(path);
			// 防止路径乱码   如果utf-8 乱码  改GBK     eclipse里创建的txt  用UTF-8，在电脑上自己创建的txt  用GBK
			isr = new InputStreamReader(fis, "UTF-8");
			br = new BufferedReader(isr);
			String line = "";
			while ((line = br.readLine()) != null) 
			{
				// 如果 t x t文件里的路径 不包含---字符串       这里是对里面的内容进行一个筛选
				System.out.println(line);
				String lon = line.substring(0, line.indexOf(";"));
				String lat = line.substring(line.indexOf(";")+1, line.indexOf("_"));
				Thread.sleep(3000);
				Map<String,String> map2 = new HashMap<>();
				map2.put("longitude", lon);
				map2.put("latitude", lat);
				map2.put("direction", "1");
				map.put("data", JSONObject.toJSONString(map2));
				gpsUploadService.busGpsDataTransfer(map);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			try {
				br.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
			try {
				isr.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
			try {
				fis.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
}